[[!img /Accessibility/at-spi.png align="center" alt="at-spi stack overview"]]
([[source|/Accessibility/at-spi.fig]])

## Requests from the screen reader

The Orca screen reader can explicitly request for information for a given widget of a given application, for instance getText:

* Orca calls pyatspi's `getText` method on a pyatspi object corresponding to the widget
* pyatspi's `getText` method (implemented in `pyatspi/pyatspi/text.py`) calls `Atspi.Text.get_text`, which is a python binding for the C `atspi_text_get_text` function from `libatspi.so` provided by at-spi2-core
* `atspi_text_get_text` (implemented in `at-spi2-core/atspi/atspi-text.c`) creates an RPC message for the dbus sender of the application and the path for the widget, using the `org.a11y.atspi.Text` dbus interface, and the `GetText` method.

dbus transmits the message to the application.

In the case of a GTK application:

* `impl_GetText` (implemented in `at-spi2-atk/atk-adaptor/adaptors/text-adaptor.c`) gets called by dbus, it parses the parameters (offsets of beginning and end), and calls `atk_text_get_text`
* `atk_text_get_text` (implemented in `atk1.0/./atk/atktext.c`) calls the `get_text` method of the accessible object corresponding to the widget, for instance a textcell.
* `gail_text_cell_get_text` (implemented in the gail module of gtk, `gtk+2.0/modules/other/gail/gailtextcell.c` or `gtk+3.0/gtk/a11y/gtktextcellaccessible.c`) fetches the text from the widget corresponding to the accessible object and returns it
* `atk_text_get_text` returns it
* `impl_GetText` stuffes the string into a dbus response

In the case of a Java application:

* `impl_GetText` and `atk_text_get_text` get called like for a GTK application, the `get_text` method is `jaw_text_get_text`
* `jaw_text_get_text` (implemented in `java-atk-wrapper/jni/src/jawtext.c`) calls the `get_text` method of the `AtkText` java class
* `get_text` (implemented in `java-atk-wrapper/wrapper/org/GNOME/Accessibility/AtkText.java`) uses the `getAtIndex` method of the `AccessibleExtendedText` interface of the widget and returns the text.
* `atk_text_get_text` returns it
* `impl_GetText` stuffes the string into a dbus response

In the case of mozilla:
* `impl_GetText` and `atk_text_get_text` get called like for a GTK application, the `get_text` method is `getTextCB`
* `getTextCB` (implemented in `mozilla/accessible/atk/nsMaiInterfaceText.cpp`) uses the `TextSubstring` of the `HyperTextAccessible` class.

In the case of a Qt4 application:
* `AtSpiAdaptor::textInterface` (implemented in `qt-at-spi/src/atspiadaptor.cpp`) gets called by qt dbus, it parses the parameters, and calls the `text` method of the `textInterface` of the `QAccessibleInterface` class.
* `QAccessibleTextWidget::text` (implemented in `qt4-x11/src/plugins/accessible/widgets/qaccessiblewidgets.cpp`) fetches the text and returns it.
* `AtSpiAdaptor::textInterface` stuffes the string into a dbus response.

In the case of a Qt5 application:
* `AtSpiAdaptor::textInterface` (implemented in qtbase/src/platformsupport/linuxaccessibility/atspiadaptor.cpp`) gets called by qt dbus, the rest is happening as with Qt4.


dbus transmits the response to the application.

* `atspi_text_get_text` gets the string from the response and returns it
