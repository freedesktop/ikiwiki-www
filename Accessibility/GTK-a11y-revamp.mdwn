# Revamping the GTK accessibility stack?

### URLs

Discussion sort-of started here (but not only)

https://gitlab.gnome.org/GNOME/gtk/issues/1739#note_685570

Input questions are detailed on [[Accessibility/Input]]

### Coherency ###

We most probably want to keep coherent with other interfaces:

* Microsoft's UIA/IA2/MSAA
* Apple's interface?

The technical IPC details vary, but the ground principle is the same:

* the screen reader uses an IPC to get information on application's widget.
* The toolkit used by the application implements the server hooks.
* Some IPCs do have effect in the application



### Strong issues ###

* AT-SPI allows any application to access information, act on the application etc.
* key snooping makes *all* keypresses go through the screen reader, thus making the whole desktop slower

### Ideas for solutions

* Checking authorization before allowing connection to AT-SPI
* Separating out key press notification from keyboard shortcuts:
  * key press notification can be asynchronous, thus not slowing desktop down
  * only keyboard shortcut would have to go through the screen reader
