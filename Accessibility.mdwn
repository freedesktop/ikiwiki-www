# Accessibility

Accessibility is important for a lot of users, without it they just can not use their computer.

## Principles

A few important principles are to be kept in mind

* We want to make existing software accessible, and avoid dedicated software
* We need synchronization: accessibility is another way for input and output
* It should be easily available, ready to be enabled.

***

## Input

### Only a keyboard

Needs keyboard shortcuts, MouseKeys.

### Only a joystick

Being able to use it as a mouse

### Only a mouse or button

Using a virtual keyboard.

### Half-keyboard

For people with one hand, using a toggle to "mirror" the keyboard layout. Some implementations use xkb: 
[[http://blog.xkcd.com/2007/08/14/mirrorboard-a-one-handed-keyboard-layout-for-the-lazy/]] , others use extensions: [[http://kieranbingham.co.uk/implementing-xhk/]] , [[https://github.com/kbingham/xhk]]

### AccessX

Done in Xorg, TBD in Wayland

* StickyKeys
* MouseKeys
* SlowKeys
* RepeatKeys
* ToggleKeys
* BounceKeys

### Key injection

* keycode injection
 * Available in Xorg through XTest
* keysym injection
 * Not available in Xorg, have to backtranslate.
 * Could be done by adding EV_KEYSYM and EV_UNICODE to evdev layer.

### PC braille keyboard

* Available in Xorg as the brai xkb layout
* ibus module available: http://ibus-sharada-braille.blogspot.fr/

***

## Output

### Video drivers

Drivers must be able to start even with no physical monitor attached to the card.

### Rendering tinkering

* Tweak DPI to make toolkits use bigger icons & fonts etc.
* Xrandr panning support
 * provides basic zoom
* Gamma tuning & color inversion
 * To tune colors
* Xrandr screen mirror
* TODO: gtk3 "perfect" magnification
 * widget is requested to render in a bigger pixmap

### AT-SPI2

This is over DBus, toolkit widgets provide their content to screen readers such as Orca.

* GTK2/GTK3: good support
* QT4/5: only preliminary support

Getting it started by hand (normally done by the Desktop Environment session manager):

* /usr/lib/at-spi2-core/at-spi-bus-launcher &
* /usr/lib/at-spi2-core/at-spi2-registryd &
* one can make sure it got registered by using

        $ xprop -root | grep SPI
        AT_SPI_BUS(STRING) = "unix:abstract=/tmp/dbus-6fNHBTP2lK,guid=9d17aaa3ca64ff4b66f0c5985442999e"

* That was the bus address, one can watch what happens by spying on it:

        $ dbus-monitor --address unix:abstract=/tmp/dbus-6fNHBTP2lK,guid=9d17aaa3ca64ff4b66f0c5985442999e

* Some applications need explicit accessibility enabling:

        export GTK_MODULES=gail:atk-bridge
        export OOO_FORCE_DESKTOP=gnome
        export GNOME_ACCESSIBILITY=1
        export QT_ACCESSIBILITY=1


Accerciser to test the availability of the content

***

## Wayland

Works just the same :D
