##META:TOPICINFO{author`"JonPhillips" date`"1082868660" format`"1.0" version`"1.6"}%
##META:TOPICPARENT{name="clipart"}%
= [[clipart][Open Clip Art Project]] =


==== Q: What is the projects official name and branding? ====

A: The project's official name is Open Clip Art Project. One tangible is that the website will be www.openclipart.org. A quick phrase about the project:
	* "An Online Massive Open Source 2d Graphics Repository"

==== Q: Why is it important to contribute my artwork to this project? ====

A: Clipart is extremely important for users of vector art programs (and all graphical programs), because
it can save a lot of time when making certain kinds of drawings and
provide examples users can start with when making their own creations.


==== Q: What inspired this project? ====

A: The Sodipodi flags project was the original inspiration for this; at Inkscape we found that users were submitting clipart and examples, so we thought it'd be worthwhile to have an independent clipart project that could provide useful content for all open source drawing tools. A side-effect of these goals is that the repository will be accessible and the graphics reusable by all (from the web).

==== Q: What is the preferred form of contribution? ====

A: Package your work in a tarball with a README and a statement that the work is dedicated to the public domain (see our contribution instructions).  We encourage SVG as the source format, but other formats are acceptable where they make sense (such as JPG for textures). One may submit the compressed archive and, or individual files from the web at http://openclipart.org.

==== Q: What are the most important long term goals of the project? ====

A: We want to build a rich collection of reusable clipart that open source programs can leverage for their users.  Currently, if one wishes to create a quick document using clipart, the easiest solution is to use a proprietary program since they tend to have clipart included along with them, or massive creative archives because of the longer history of support for the closed source standard design applications. We want to turn that around so that it ceases to be an argument for not using Open Source.  Ultimately, we would like to achieve a situation where the Open Source world has orders of magnitude better clipart than the proprietary world (although our repository will be usable by both worlds).

==== Q: What's the deal with all these different graphic formats?  !BMP, JPG, GIF, PNG, SVG, WMF...? ====
																											 
A: With raster images, each format has certain strengths and weaknesses.
Formats like TIF and !BMP are called "uncompressed" (in general).  Each
pixel in the image is represented by a specific bit of data in the file.
When the image is large, this file tends to be bulky.  So some formats employ
algorithms to compress the data so that a bit of data may represent
several pixels.  For example, in the GIF format if you have 100 blue
pixels in a row, instead of having 100 bits of data, it would say something to the effect of "blue
pixel x 100" which only takes a few bits of data to say.  This is why GIF works
really well for images that have large areas of similar colors and high
amounts of regularity, like line art.

GIF, !BMP, and TIF are called "lossless" formats; you can
take an image in one of those formats and convert it back and forth to
one of the other formats without any problem, and the image will always
maintain the same quality.  JPG, on the other hand, uses a different approach for achieving
compression. The method it uses ''drops'' some of the data, so it is called "lossy".  It
does this using some known tricks to how the human eye works.  This
works well for photographic images, less so for artwork, and extremely
poorly for line art.
																											 
The problem, as it relates to clipart, is that JPG's show their
artifacts when you zoom in or if you want to edit them.  Since it's lost
some of its original info, when you save it again, it recalculates and
the quality becomes worse.  The higher the compression ratio you use,
the faster it'll get bad.

PNG is considered a better format than either GIF or JPG, though it too
has a few tradeoffs.  It is a lossless format so doesn't have the
problems that JPG has, but uses smarter algorithms than GIF.  So while
it doesn't compress as tightly as JPG, it's *tons* better than GIF.
Unfortunately, it is a newer format so sometimes is not supported by
some applications. This is much less of an issue today than it was a few years
ago.  PNG also includes support for several advanced features such as
alpha channels.
																											 
So that's the story with raster formats.  Now, for this project, our
area of interest is going to be vector formats, at least initially.
The difference between raster and vector formats is very significant.
If you draw a circle and save it as a raster image such as !BMP, what the
file will store is a bunch of data representing each pixel in the image,
some of which will be white, others black.  The fact that it represents
a circle is lost; it takes a human to recognize that, "Oh, it's a circle."
																											 
In vector formats, what gets stored is the shape info that describes 
the equation of the line and points.  So if you draw a
circle, it'll store bits of info that means "circle of this radius at
this point in the drawing".  What this means is that if you want to go
back and re-edit it, you can use your application's knowledge of editing
circles.
																											 
There's a lot more that can said about these image formats, but that's
basically it in a nutshell.

-- Main.JonPhillips - 11 Apr 2004
