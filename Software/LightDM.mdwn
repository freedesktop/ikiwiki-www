# The Light Display Manager (LightDM)

## Description

LightDM is a cross-desktop display manager.
A display manager is a daemon that:

* Runs display servers (e.g. X) where necessary.
* Runs greeters to allow users to pick which user account and session type to use.
* Allows greeters to perform authentication using PAM.
* Runs session processes once authentication is complete.
* Allows remote login options

Key features of LightDM are: 

* Cross-desktop - supports different desktops
* Supports different display technologies (X, Mir, ...)
* Lightweight - low memory usage and fast performance
* Guest sessions
* Supports remote login (incoming - XDMCP, VNC, outgoing - XDMCP, pluggable)
* Comprehensive test suite
* Low code complexity

## Installation

LightDM is available in the following distributions:

* [[Arch|https://www.archlinux.org/packages/?name=lightdm]]
* [[Debian|http://packages.qa.debian.org/l/lightdm.html]]
* Elementary OS
* [[Fedora|https://apps.fedoraproject.org/packages/lightdm]]
* [[Mageia|http://mageia.madb.org/package/show/name/lightdm/application]]
* [[OpenSUSE|http://software.opensuse.org/package/lightdm]]
* [[Ubuntu|https://launchpad.net/ubuntu/+source/lightdm]]

Development is hosted on [[Launchpad|https://launchpad.net/lightdm]].
[[Tarball releases|https://launchpad.net/lightdm/+download]] are available.

Releases are synchronised with the [[Ubuntu release schedule|https://wiki.ubuntu.com/Releases]] and supported for the duration of each Ubuntu release.

The core LightDM project does not provide any greeter with it and you should install a greeter appropriate to your system.
Popular greeter projects are:

* [[LightDM GTK+ Greeter|https://launchpad.net/lightdm-gtk-greeter]] - a greeter that has moderate requirements (GTK+).
* [[LightDM KDE|http://projects.kde.org/lightdm]] - greeter used in [[KDE||http://kde.org]] (Qt)
* [[LXqt Greeter|https://github.com/lxde/lxqt-lightdm-greeter]] - greeter used in [[LXqt|http://lxqt.org]] (Qt)
* [[Pantheon Greeter|https://launchpad.net/pantheon-greeter]] - greeter used in [[Elementary OS|http://elementaryos.org]] (GTK+/Clutter).
* [[Unity Greeter|https://launchpad.net/lightdm-gtk-greeter]] - greeter used in [[Unity|https://launchpad.net/unity]].
* Run with no greeter (automatic login only)
* Write your own...

## Contact

Discussion should be done on the [[LightDM mailing list|http://lists.freedesktop.org/mailman/listinfo/lightdm]].

## Development

Please [[file bugs|https://bugs.launchpad.net/lightdm]] for problems/feature requests.

Development is done on Launchpad.
To check out the trunk branch you will need to [[install Bazaar|http://wiki.bazaar.canonical.com/Download]].
For committing changes back you will need a [[Launchpad account|https://help.launchpad.net/YourAccount/NewAccount]] (free) and to agree to the [[Canonical contributor license agreement|http://www.canonical.com/contributor-license-agreement]].

Building LightDM from trunk:

    bzr branch lp:lightdm
    cd lightdm
    ./autogen.sh
    make
    make install

Making changes:

    bzr branch lp:lightdm my-branch-name
    cd my-branch-name
    (make changes)
    bzr commit
    bzr push lp:~my-lp-username/lightdm/my-branch-name

Then go to https://code.launchpad.net/~my-lp-username/lightdm/my-branch-name and select "Propose for merging".
Your merge proposal will be reviewed by the LightDM development team which often requires some changes to be made by you.
You should push your updates to the same branch:

    bzr commit
    bzr push

Once accepted your proposal will be merged by us into the LightDM trunk and be in the next release.
Congratulations!

## Greeter Development

To develop a greeter you write against the liblightdm library.
Two variants are provided - one for GObject based projects and one for Qt based projects.
Language bindings are provided for Vala and GObject introspection (i.e. Python, Javascript etc).

For API documentation either install your distribution provided liblightdm development packages or see [[online documentation|http://people.ubuntu.com/~robert-ancell/lightdm/reference/]].

You can test greeters either by installing them or running `lightdm --test-mode` which allows you to run LightDM inside your session using Xephyr.
