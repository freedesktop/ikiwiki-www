

## Building Project Utopia in Debian

Project Utopia consists of a number of different components. These include udev, DBUS, HAL and Gnome-Volume-Manager. This guide will show how to play with the technology in Debian Unstable. 


## Creating a base system

It is recommended that you install udev from the Debian archive. udev changes little, and we want to keep the compilation for the technologies that update often. As such, you can install udev with: 

apt-get install udev 

It is recommended that you also install DBUS in the same manner. Install the following packages: 

                     * dbus-1 
                     * dbus-1-dev 
                     * dbus-glib-1 
                     * dbus-glib-1-dev 
To compile HAL and the Gnome-Volume-Manager you will need to ensure that you have the Python, GNOME, GTK and Glade libraries installed. These are all conveniently packaged for Debian. Install these: 

                     * python-gnome2 
                     * python-gnome2-dev 
                     * libgnomeui-dev 
                     * gnome-common 
                     * libglade2-dev 
You should also ensure you have the 'hotplug' package installed. With these installed you will now have a system ready to compile HAL and the Gnome-Volume-Manager on. 


## Compiling HAL

HAL requires automake 1.7 or newer. You can install the latest automake fro the Debian archive. At the time of writing 1.8 is the latest version. This will install a binary on your system called automake-1.8. It is recommended that you make a symlink in /usr/bin to this binary from the command 'automake' - I had problems getting the HAL code to compile with my new automake and the symlink fixed it. Create it with: 

`ln -s /usr/bin/automake /usr/bin/automake-1.8` 

Another step to perform is to set the PKG_CONFIG_PATH environmental variable. You need to set this so that the dbus packages can be found. If you do a quick: 

`locate dbus-1.pc` 

you should get the location of the package. On my system this is /usr/lib/pkgconfig/, so set the environmental variable to it: 

`export PKG''CONFIG''PATH`/usr/lib/pkgconfig/= 

We are now ready to compile the code. Information on this is in the HAL Build Instructions. 


## Compiling the GNOME Volume Manager

You will now have all the software on your system to compile the GNOME Volume Manager. You will need to get the code from the GNOME CVS server. To do this, set the following environmental variable: 

export CVSROOT=:pserver:[[anonymous@anoncvs.gnome.org|mailto:anonymous@anoncvs.gnome.org]]:/cvs/gnome 

Next, login to the server: 

`cvs login` 

When asked for the password, just press enter. Now you can check the code out with: 

`cvs co gnome-volume-manager` 

When the code has checked out you will need to re-set the PKG_CONFIG_PATH to reflect the new HAL package. This is located in the `hal/hal` directory in your HAL source code. Set this in the variable with the existing path intact. My code is in `/home/jono` so you will need to change this to your own path: 

`export PKG''CONFIG''PATH`/home/jono/hal/hal:/usr/lib/pkgconfig/= 

With all this complete, run `autogen.sh` in the GNOME Volume Manager source directory and then run `make`.  

Jono Bacon [[http://www.jonobacon.org/|http://www.jonobacon.org/]] 

-- Main.[[JonoBacon|JonoBacon]] - 07 Jun 2004 
