##META:TOPICINFO{author`"TrentLloyd" date`"1083202980" format`"1.0" version`"1.1"}%
##META:TOPICPARENT{name="Home"}%
Avahi is a system which facilitates service discovery on a local network -- this means that you can plug your laptop or computer into a network and instantly be able to view other people who you can chat with, find printers to print to or find files being shared.  This kind of technology is already found in MacOS X (branded 'Rendezvous', 'Bonjour' and sometimes 'ZeroConf') and is very convenient.

Avahi is based on LennartPoettering's flexmdns mDNS implemenation for Linux which has been discontinued in favour of Avahi.

----

'''Avahi needs a logo. If you are well versed with The Gimp, feel free to send us your logo suggestion to [mailto:lathiat@bur.st], thank you!''' 

''(It may help you for this to know that Avahi is [http://en.wikipedia.org/wiki/Avahi a kind of monkey])''

'''2005-08-29: We have released Avahi 0.2 "DzieÅ Dobry"! See below for download information'''

2005-08-22: We have released Avahi 0.1 "Guten Tag"!

----

== Details ==
Avahi implements the [http://www.dns-sd.org/ DNS-SD] over [http://www.multicastdns.org/ Multicast DNS].  It uses [http://www.freedesktop.org/Software/dbus D-BUS] to communicate from the application to the system daemon.  A system daemon is used to coordinate application efforts in caching replies, necessary to reduce noise on networks generated by protocols such as MDNS.  The goals of this project are for implementation into the GNOME desktop, however that does not stop it from being used by any other applications or desktop environments as long as you have a working installation of dbus, which most modern distributions now come with by default.

== Why ==
 * Although other implementations exist (such as Howl), none exist that use fully open and free GPL-compatible code.  The howl library is hindered by the APSL among other things, which makes it undesirable to some people, especially distributions such as Debian which has strict free software guidelines.

== Current Status ==
The Avahi mDNS responder is now feature complete implementing all MUSTs and the majority of the SHOULDs of the mDNS RFC. It passes all (except a questionable one) tests in the Apple Bonjour conformance test suite. In addition it supports some nifty things that have never been seen elsewhere like correct mDNS reflection accross LAN segments. The mDNS responder is implemented as a C library ("avahi-core") which is embeddable into other applications. The daemon itself including a DBUS API is complete, as well as a C client wrapper around this API.

== Download ==

=== Stable Release ===
Avahi 0.2 "DzieÅ Dobry" is available from
    http://www.freedesktop.org/~lennart/avahi-0.2.tar.gz

Release announcement is available here
    http://www.freedesktop.org/~lennart/announcement-0.2

Please note that if you wish to make use of the avahi-publish tool, you will need to apply this patch to your DBUS build which fixes a bug in the python library for DBUS 
    http://www.freedesktop.org/~lennart/dbus-python-invalid-values.patch

This patch is now in DBUS CVS and the Ubuntu Breezy version of D-Bus.

=== Development ===

You can checkout the current development code using Subversion:

    {{{svn checkout svn://svn.0pointer.de/avahi/trunk avahi}}}

For browsing the code online use [http://0pointer.de/cgi-bin/viewcvs.cgi/?root=avahi ViewCVS]

Please consider joining our [http://lists.freedesktop.org/mailman/listinfo/avahi mailing list], thank you!

You have a chance to meet the developers on #avahi on irc.freenode.org.

Please report bugs to the [http://bugs.freedesktop.org/ fd.o bugzilla].

Avahi is tracked at [http://cia.navi.cx/stats/project/avahi CIA]

== Requirements ==
 * expat
 * [http://0pointer.de/lennart/projects/libdaemon/ libdaemon]
 * Linux 2.4 or 2.6 with IP multicasting enabled
 * glib2 (optional)
 * DBUS 0.3x or newer (optional, for IPC with client applications)
 * gtk2 + glade2 (optional, for the GUI avahi-discover-standalone tool)
 * doxygen (optional, for the API documentation)
 * Python2.4, pygtk2 (optional, for the client tools)
 * python-twisted (optional, for the tool avahi-bookmarks)

== Features ==
 * Licensed under LGPL
 * IPv4 and IPv6 support
 * DBUS interface
 * Drops all priviliges and runs as user "avahi"
 * Embeddable mDNS stack (i.e. mDNS stack available as library)
 * Support for loading static service definitions from XML fragments
 * Interface to GLIBC NSS using [http://0pointer.de/lennart/projects/nss-mdns/ nss-mdns]
 * Ability to reflect mDNS traffic between multiple subnets
 * Ability to configure a unicast DNS server automatically from server data published on the LAN

== Screenshot ==

Everybody loves screenshots:

[http://www.freedesktop.org/~lennart/avahi-disocvery-ng.png]

(This shows a debugging tool which makes direct use of the Avahi mDNS stack for browsing every available DNS-SD service on all local networks)

== FAQ ==
 * '''Is it OK to run multiple mDNS responders on the same machine?''' No, it is not OK. Sooner or later some mDNS features known as "Known Answer Suppression" and "Unicast Reply" (and probably some more) will result in problems if more than one responder runs on the same machine.
 * '''May I enable the mDNS reflector on multiple hosts accessing the same two networks?''' No, don't do that. Queries will be looped, and sooner or later your network will be stalled with mDNS traffic.
 * '''Avahi doesn't work, it doesn't register or find any services and doesn't resolve mDNS host names!''' Make sure:
  * That you run a recent Kernel (both 2.4 and 2.6 should work) with IP Multicasting enabled
  * That you run only one mDNS stack 
  * That you disabled all local firewalls (This includes disabling the Firestarter default FW), at least for UDP traffic from and to port 5353
 * '''Does avahi run on non-Linux operating systems?''' No, currently Avahi is available for Linux only. Ports to other (Unix-like) operating systems are not trivial, but feasible. (The major issue here is the replacement for Netlink) Patches are welcome!
 * '''Blah, you fools, glib is bloat and sucks!''' Avahi doesn't depend on glib. Yet it comes with a glib event loop adapter. Use --disable-gtk to disable building it.
 * '''Blah, you fools, DBUS is bloat and sucks!''' Then Avahi is not for you, sorry. As it seems we think a little different about DBUS than you do.
 * '''Why did you implement yet another free mDNS stack? Apple released their code under a free license!''' The "freeness" of the license Apple used is questionnable, e.g. the Debian project decided to not include code under APSL. In addition we consider our code superior to Apple's in many aspects. In case you want to flame us on this topic, our email address is /dev/null.

== Documentation ==

You can read the documentation online:

 * [http://freedesktop.org/~lennart/avahi-daemon.8.xml avahi-daemon(8)]
 * [http://freedesktop.org/~lennart/avahi-daemon.conf.5.xml avahi-daemon.conf(5)]
 * [http://freedesktop.org/~lennart/avahi.service.5.xml avahi.service(5)]
 * [http://freedesktop.org/~lennart/avahi-dnsconfd.8.xml avahi-dnsconfd(8)]
 * [http://freedesktop.org/~lennart/avahi-dnsconfd.action.8.xml avahi-dnsconfd.action(8)]
 * [http://freedesktop.org/~lennart/avahi-browse.1.xml avahi-browse(1)]
 * [http://freedesktop.org/~lennart/avahi-publish-service.1.xml avahi-publish-service(1)]
 * [http://freedesktop.org/~lennart/avahi-publish-address.1.xml avahi-publish-address(1)]
 * [http://freedesktop.org/~lennart/avahi-resolve-host-name.1.xml avahi-resolve-host-name(1)]
 * [http://freedesktop.org/~lennart/avahi-resolve-address.1.xml avahi-resolve-address(1)]
 * [http://freedesktop.org/~lennart/avahi-discover.1.xml avahi-discover(1)]
 * [http://freedesktop.org/~lennart/avahi-bookmarks.1.xml avahi-bookmarks(1)]
== Architectural Overview ==

avahi consists of several parts:

 * '''libavahi-common''' - a library containing some function used both by clients to the avahi-daemon and the mDNS stack itself.
 * '''libavahi-core''' - A library implementing a flexible mDNS/DNS-SD stack. The most prominent consumer is avahi-daemon. Besides that primarily useful for developers of embedded applications. This stack is very avanced and has some uncommon features like mDNS reflection. A preliminary (doxygen generated) API documentation for this and libavahi-common is [http://www.freedesktop.org/~lennart/doxygen/ available.]
 * '''libavahi-client''' - A minimal wrapper around the DBUS API to simplify its usage. Hides the DBUS internals completely. This resembles the API of libavahi-core more or less.
 * '''libavahi-glib''' - An adapter for connection avahi-client or avahi-core to a GLib main loop.
 * '''avahi-discover-standalone''' - A GTK tool for enumerating all available services on the local LAN. Its links directly against libavahi-core, i.e. embedds its own mDNS stack. You should use it only for debugging, since it's not a good idea to run multiple mDNS stacks simultaneously on the same machine. (Screenshot above)
 * '''avahi-daemon''' - The avahi daemon which makes use of libavahi-core to implement an mDNS stack which is accessible by different ways:
  * System administrators may put short XML fragments in /etc/avahi/services to publish semi-static services (e.g. SSH)
  * A so called "simple protocol" whith a very limited command set which is used exclusively by nss-mdns (to resolve host names via mDNS) and avahi-dnsconfd
  * The DBUS interface for normal clients (like nautilus or gaim) which is an IPC wrapper around the functions provided by libavahi-core 
 * '''[http://0pointer.de/lennart/projects/nss-mdns/ nss-mdns]''' - A GNU libc NSS module for host name resolving using mDNS. This is an external project maintained by Lennart and not part of avahi since it doesn't require avahi to be useful. But if it finds a running avahi daemon it makes use of its superior RR cacheing.
 * '''avahi-dnsconfd''' - A small daemon which may be used to configure conventional DNS servers using mDNS in a DHCP-like fashion. Especially useful on IPv6.
 * '''avahi-browse''', '''avahi-publish-service''', '''avahi-publish-address''', '''avahi-resolve-address''', '''avahi-resolve-host-name''' - Some command line utilities written in Python which use the DBUS API to take care of simple tasks.
 * '''avahi-discover''' - An implementation of an '''avahi-discover-standalone'''-like tool, but written in Python using pygtk and using DBUS to communicate with an Avahi daemon.
 * '''avahi-bookmarks''' - A Python based miniature web server that browses for mDNS/DNS-SD services of type '_http._tcp' (i.e. web sites) and makes them available as HTML links on http://localhost:8080.

Please have a look on [http://freedesktop.org/~lennart/overview.png this graphic] which illustrates a little how these parts play together. (The white rectangles are implemented by Avahi, the gray rectangles are external components)

== Developing with Avahi ==

Most applications will want to use the DBUS API avahi provides. Therefore some notes on the DBUS API here:

The DBUS API of Avahi is fairly complete now. Though no real documentation is available, you may browse the DBUS introspection data online:
 * [http://www.freedesktop.org/~lennart/Server.introspect.xml org.freedesktop.Avahi.Server]
 * [http://www.freedesktop.org/~lennart/EntryGroup.introspect.xml org.freedesktop.Avahi.EntryGroup]
 * [http://www.freedesktop.org/~lennart/DomainBrowser.introspect.xml org.freedesktop.Avahi.DomainBrowser]
 * [http://www.freedesktop.org/~lennart/ServiceTypeBrowser.introspect.xml org.freedesktop.Avahi.ServiceTypeBrowser]
 * [http://www.freedesktop.org/~lennart/ServiceBrowser.introspect.xml org.freedesktop.Avahi.ServiceBrowser]
 * [http://www.freedesktop.org/~lennart/ServiceBrowser.introspect.xml org.freedesktop.Avahi.ServiceResolver]
 * [http://www.freedesktop.org/~lennart/ServiceBrowser.introspect.xml org.freedesktop.Avahi.HostNameResolver]
 * [http://www.freedesktop.org/~lennart/ServiceBrowser.introspect.xml org.freedesktop.Avahi.AddressResolver]

Three example Python scripts illustrating the use of the DBUS API are available in the SVN:
 * [http://0pointer.de/cgi-bin/viewcvs.cgi/*checkout*/trunk/avahi-utils/avahi-publish-service.in?root=avahi avahi-publish-service]
 * [http://0pointer.de/cgi-bin/viewcvs.cgi/*checkout*/trunk/avahi-utils/avahi-publish-address.in?root=avahi avahi-publish-address]
 * [http://0pointer.de/cgi-bin/viewcvs.cgi/*checkout*/trunk/avahi-utils/avahi-browse.in?root=avahi avahi-browse]
 * [http://0pointer.de/cgi-bin/viewcvs.cgi/*checkout*/trunk/avahi-utils/avahi-resolve-address.in?root=avahi avahi-resolve-address]
 * [http://0pointer.de/cgi-bin/viewcvs.cgi/*checkout*/trunk/avahi-utils/avahi-resolve-host-name.in?root=avahi avahi-resolve-host-name]

In case you plan to use one of the C APIs, you can browse the doxygen-generated [http://www.freedesktop.org/~lennart/doxygen/ development reference] online. Some examples how to make use of Avahi in your application are available in the SVN:

  * [http://0pointer.de/cgi-bin/viewcvs.cgi/*checkout*/trunk/examples/client-browse-services.c?content-type=text%2Fplain&root=avahi client-browse-services.c]
  * [http://0pointer.de/cgi-bin/viewcvs.cgi/*checkout*/trunk/examples/client-publish-service.c?content-type=text%2Fplain&root=avahi client-publish-service.c]

== People ==

Avahi has been developed by:
 * LennartPoettering
 * TrentLloyd
 * Sebastien Estienne
