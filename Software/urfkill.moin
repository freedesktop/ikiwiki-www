= urfkill =

The urfkill project provides:
 * a rfkill daemon that implements well-defined D-Bus interfaces to deal with radio killswitches.

The actions that a user can perform with urfkill are restricted by [[Software/PolicyKit|PolicyKit]].

In some situations, accessing rfkill interface is necessary for userspace applications, e.g. Function Key support. [[Software/hal|HAL]] took the middleware job and provided D-Bus interfaces before, but HAL is [[http://lists.freedesktop.org/archives/hal/2008-May/011560.html|deprecated]].

urfkill is useful to control and monitor the radio killswitches and aimed to provide a flexible function key configuration for killswitches.

== Download ==

The latest release can be downloaded from the TO BE SETUP.

Development happens in [[GettingInvolved|git]].  There is a [[https://github.com/lcp/urfkill/|web interface]] to the repository.

== Documentation ==

=== Features ===

Urfkill has the following features:
 * Issue rfkill state change signals through DBus
 * Provide DBus interface for userland applications to block/unblock rfkill.
 * Use PolicyKit for system-wide privileges.
 * Send RFKILL_IOCTL_NOINPUT by ioctl to disable rfkill-input function. Please also refer to rfkill interface patch in kernel: [[http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=c64fb01627e24725d1f9d535e4426475a4415753|rfkill: create useful userspace interface]]. Sometimes, you will want to disable rfkill-input function in kernel because:
   * The rfkill-input conflicts with the BIOS/EC default action for wlan/bluetooth/wwan.
   * You want to implement a userland solution to control rfkill state when user press wlan/bluetooth/wwan Fn+F? hotkey, and you need disable the rfkill-input function without rebuilding kernel.

=== D-Bus methods ===

It currently provides a few D-Bus method:
 * Block/Unblock: The methods to block or unblock a specific type of killswitches.
 * GetAll: It returns the list of killswitches
 * GetKillswitch: It returns the information of a killswitch.

There are also some signals which are useful to monitor the status of killswitches:
 * RfkillAdded()
 * RfkillChanged()
 * RfkillRemoved()

I also implemented a glib binding to make it easier to use.

=== HowTo ===

[[Software/urfkill/HowToLaunch|How to launch urfkill when system boot]]

== Released ==

=== urfkill 0.1.1 ===
Hi all,

I'm glad to release urfkill 0.1.1. The tarball is available here:
https://github.com/downloads/lcp/urfkill/urfkill-0.1.1.tar.bz2

This release adds a few features which includes:

1. Hardware profile parser for urfkill settings
  The "profile" file is a xml file which includes various matching rules
  It uses the information from DMI to match laptops to configure urfkill
  properly. Currently, I chose the following values from /sys/class/dmi/id
  for machine matching: sys_vendor, bios_date, bios_vendor, bios_version,
  product_name, and product_version. There are already 2 profiles available
  now, and any feedback for the settings is always welcome :-)
  NOTE: The pre-configured settings will be overwritten by
/etc/urfkill/urfkill.conf.

2. Tentative dbus methods for the key control
  Two dbus methods are added to query and enable/disable the rfkill key
  control.

3. KEY_RFKILL handling
  The keycode ,KEY_RFKILL, is handled by urfkilld now.

There are also some bug fixes. Please check NEWS file for further information.

I'll put more effort for the documents and revise the dbus methods for the next
release. Any suggestion or bug report are welcome and appreciated :-)

Sincerely Yours,

Gary Lin

=== urfkill 0.1.0 ===
Hi all,

I am pleased to release urfkill 0.1.0 and it's available in:
https://github.com/downloads/lcp/urfkill/urfkill-0.1.0.tar.bz2

urfkill implements a daemon, urfkilld, to monitor and control
the radio killswitches of WLAN/BLUETOOTH/WWAN/UWB/WIMAX.
It also provides DBus methods to monitor and control the killswitches,
so the userspace applications can interact with them without
getting root privilege.

Since the kernel rfkill input handler is going to be deprecated,
urfkilld catches the rfkill keys and does a flip-flop state update
for the killswitches (the same behavior as rfkill-input). In the
future, we are planning to extend the key policy and make it
more flexible and the further customization possible.

I've tested urfkill in 5 laptops [1], and it works fine except one [2]
that needs an extra configuration.

Although it is still far from perfect, I think it's usable now. Any
suggestion or bug report are welcome and appreciated :-)

Thanks,

Gary Lin

[1] Acer aspire one, MSI U160, eeepc (unknown model),
Acer Travelmate 372, Lenovo X200

[2] I ran into a funky situation while testing urfkilld in X200.
The bluetooth killswitch (hci0) sometimes was soft-blocked
when I unblocked the killswitch (tpacpi_bluetooth_sw) provided
by thinkpad-acpi. It can be worked around by set force_sync
to true in /etc/urfkill.conf, but I still wonder what is the root
cause.

== Bugs ==

Currently, you can mail to Gary Lin (glin@novell.com) and Joey Lee (jlee@novell.com).

== TODO ==

 * Replace rfkill-input module in kernel
 * Provide a policy for user to setup rfkill control rules when catching WLAN/BT/3G keycode.
 * Integrate with GUI to provide power consumption function to user. Plan send patch to:
    * Killswitch-Manager
    * killswitch-applet
    * python-killswitch
 * Provide a DBus method to enable/disable the function key control in urfkill daemon
----
CategoryHalReplacement
