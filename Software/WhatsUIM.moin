##META:TOPICINFO{author`"TokunagaHiroyuki" date`"1092413202" format`"1.0" version`"1.3"}%
##META:TOPICPARENT{name="uim"}%
== What's uim? ==

Uim is a multilingual input method library. Uim's project goal is to provide secure and useful input method for all languages. 

== Features of uim ==

There are some input method frameworks in the world. What are the features of uim and what is the difference of uim and other input method frameworks?

=== Portable ===

Uim works in many environments. Uim supports of course general desktop system such as GNOME or KDE, but also supports Linux Zaurus, Mac OS X.

=== Just a library ===

Many input method frameworks such as XIM is implemented as a client/server system. But uim is a library, not a client/server system. Most of users don't need input method system at all or need simple table based input method system. Such users wouldn't install complex input method system, so we want keep our input method simple. Now uim may not be simple so much, but we have a will to make uim as simple as we can.

== What applications can I use with uim? ==

	* All X applications. (You can use them with uim-xim.)
	* Gtk+ applications such as gedit. There are two way to use uim. Through uim gtk-immodule directly, or through xim immodule. We recommend using uim through gtk immodule directly.
	* All qt applications. There are two way to use uim. Through XIM or qt-immodule. If you want to uim with qt-immodule, you will need a patch now.
	* All console applications. (You can use them with uim-fep.)

== Why uim is written in C? ==

Uim is a basic library, so we need stable ABI. Maintaining ABI of C++ is sometimes difficult.

== Why uim has a embedded scheme interpreter? ==

Because power of C is cheap, uim has a embedded Scheme interpreter.

