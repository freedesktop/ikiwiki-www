##META:TOPICINFO{author`"AndersCarlsson" date`"1064354400" format`"1.0" version`"1.1"}%
##META:TOPICPARENT{name="HackersGuide"}%
== Attaching private data ==

Sometimes you want to attach extra data to server data structures, this is done in the following way:

=== 1. Allocate a private index for the data ===

This private index is used for referring to the data later. It's allocated in the following manner:
{{{
int MyPixmapIndex = -1;

MyPixmapIndex = AllocatePixmapPrivateIndex ();
}}}

(The same is done for other data types, such as gcs and windows. Just use AllocateGCPrivateIndex and AllocateWindowPrivateIndex respectively)

The index allocation functions return -1 on failure, so it's always a good idea to check the return value.

Since you only want to allocate the index once, you can declare a generation variable and compare it to the serverGeneration variable:

{{{
unsigned long MyGeneration = 0;

if (MyGeneration != serverGeneration)
{
	 /* Allocate private indexes */

	 MyGeneration = serverGeneration;
}
}}}

=== 2. Connect the private index to the extra data ===

Now that you have allocated the private index, you need to associate it with the size of a struct containing the data; this is so X will know how much extra data to allocate.

{{{
typedef struct
{
	 /* Data */
} MyPixmapRec, *MyPixmapPtr;

AllocatePixmapPrivate (pScreen, MyPixmapIndex, sizeof (MyPixmapRec));
}}}

(The allocation functions return False on error).

=== 3. Accessing the data ===

The data is accessed using the private index:

{{{
MyPixmapPtr pixmapPtr;

pixmapPtr = (MyPixmapPtr) pixmap->devPrivates[MyPixmapIndex].ptr;
}}}

This can be done as a macro:
{{{
#define GET''MY''PIXMAP_PRIVATE(pixmap) ((MyPixmapPtr)(pixmap)->devPrivates[MyPixmapIndex].ptr;
}}}

(It's also possible to assign your own data using this method. Just use 0 as the size when calling AllocatePixmapPrivate and allocate the data yourself or just re-use already allocated data.)

=== 4. Screen data ===
Screen private data is a bit different; it isn't automatically allocated for you. Thus you have to do:

{{{
MyScreenPtr myScreenPtr;

myScreenPtr = xalloc (sizeof (MyScreenRec));

pScreen->devPrivates[MyScreenIndex].ptr = (pointer) myScreenPtr;
}}}

(It's not required that you allocate the data, any pointer will do fine.)
-- Main.AndersCarlsson - 23 Sep 2003
