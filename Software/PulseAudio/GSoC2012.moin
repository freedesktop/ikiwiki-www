== Dates ==
[[http://www.google-melange.com/gsoc/events/google/gsoc2012|Official timeline]].

The next important deadline is for orgs to apply: '''February 27 19:00 UTC'''

== Important information ==
== Reference ==
The official website is at: http://pulseaudio.org/ (this page is only hosted here since this wiki is a bit more reliable)

API documentation is at: http://freedesktop.org/software/pulseaudio/doxygen/

The code is at: http://cgit.freedesktop.org/pulseaudio/pulseaudio/

=== Contacts ===
Feel free to contact us on IRC (#pulseaudio on Freenode) or via our [[javascript:void(0);/*1330365707639*/|mailing list]]). We don't bite!

Arun Raghavan (Ford_Prefect on IRC, arun YAT accosted DAWT net) (admin, mentor)

Colin Guthrie (coling on IRC, colin YAT guthr DAWT ie) (backup admin, mentor)

Tanu Kaskinen (tanuk on IRC, tanuk YAT iki DAWT fi) (mentor)

Peter Meerwald (??? on IRC, pmeerw YAT pmeerw DAWT net) (mentor)

== Ideas ==
These are some ideas that the community would like to see pursued, Feel free to contribute your own ideas! The initial list is rough ideas. Use the template at the end of the page for more concreted ideas.

 * Improve RTP performance (Maarten?) [needs to be more concrete]
 * ROAP improvements (Colin?) [is this feasible? require hardware?]
 * Proper HDMI support (Arun) [build on Pierre's work, possibly not enough for a whole project]
 * Add "high priority" events (Arun) [these would preempt passthrough streams, possible notify on all outputs, ...]
 * Efficient resampling (Peter) [esp. on embedded CPUs; maybe fixed ratio sample rate conversion]

=== Project Title (template) ===

'''Brief description:'''

'''Expected results:'''

'''Contact(s):''' <list of people to talk to about this idea, mark potential mentors distinctly>

'''Necessary background:''' <if any, such as networking, assembly, ...>

'''Mentor:'''

=== Configurable maximum volume for sinks and sources ===

'''Brief description:'''

Some outputs may be capable of producing louder sound than what is comfortable. The user should be able to set a limit for the maximum volume.

Some inputs may need software amplification, while others don't. Software amplification is prone to cause clipping, so it should be avoided when possible. If software amplification is not needed, it's useful to be able to prevent it from ever happening by setting the source maximum volume accordingly.

'''Expected results:'''

Several stages, the more gets done, the better:

 * Ability to somehow configure volume limits for devices in Pulseaudio, and enforce those limits.
 * Make the volume limit configuration persistent so that when Pulseaudio is restarted, the configuration is restored automatically.
 * A GUI for configuring the volume limits.
   * Preferably implemented by modifying the volume configuration tool of the desktop environment of your choice, or by modifying pavucontrol.

'''Contact(s):''' Tanu

'''Necessary background:''' For the GUI part some experience from writing graphical applications would be useful.

'''Mentor:''' Tanu
