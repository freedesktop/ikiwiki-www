[[TracNav(TOC)]]

= Developer Documentation =

== Developing Clients ==

You may browse the [http://www.doxygen.org/ Doxygen] generated [http://0pointer.de/lennart/projects/pulseaudio/doxygen/ programing documentation] for the client API. (Run make doxygen to generate this documentation from the source tree)

If you want to write a volume control application, [wiki:WritingVolumeControlUIs make sure to read this].

'''Also, make sure to set properties on all PA connections, [wiki:ApplicationProperties make sure to read this].'''

== Developing Modules ==

There are several reasons for writing loadable modules for !PulseAudio:

 * Extended device driver support
 * Protocol support beyond ESOUND's protocol and the native protocol. (such as NAS or a subset of aRts)
 * New programming interfaces such as XMLRPC or DBUS for controlling the daemon.
 * Hooking audio event sources directly into !PulseAudio (similar to {{{module-x11-bell}}})
 * For low latency applications such as VOIP: load the VOIP core directly into !PulseAudio and have a slim GUI frontend to control it.

There is currently a little bit of documentation available how to write loadable modules for !PulseAudio. Beyond this, read the source, Luke! If you are interested in writing new modules feel free to contact the authors in case you have any questions.

 * [wiki:WritingModules Writing Modules]
 * [wiki:CoreAPI Core API]
 * [wiki:ModuleAPI Module API]
 * [wiki:ModargsAPI Module Arguments API]
 * [wiki:ThreadingModel Threading Model]
 * [wiki:AboutWritingIO A discussion about writing a sink]
 * [wiki:CodingStyle Coding Style]

Some things that might be relevant for people hacking on some of the modules:

 * [wiki:BlueZIssues BlueZ issues/limitations list]
 * [wiki:AlsaIssues ALSA issues/limitations list]
