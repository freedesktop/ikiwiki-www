# Access Control

## Introduction
Since the introduction of time-sharing efforts in the 60s, operating system's security was naturally designed around the concept of the user: how to protect a user's applications, time quota, storage quota, and his or her own data, from other many active users using the very same system. 

This user-centric security model was inherited into the Personal Computing era, with slight differences. By late 2008, the iPhone shifted the client application landscape by forcing each application to run only in its own isolated sandbox. By 2012, Docker similarly changed the server side of the equation by mainstreaming application-centric containers.

The concept of user-based OS security is so prevalent that Android, to achieve basic file-system separation between its apps, at package install time gives each package a distinct Linux user ID.¹

## The problem

## Prior Art
####Windows
####macOS
####iOS

# References
- ¹[Introduction: System Permissions](https://developer.android.com/guide/topics/security/permissions.html). Anrdroid Developers Guide
- ₂[The PulseAudio Sound Server](http://darwish.chasingpointers.com/pub/The%20PulseAudoi%20Sound%20Server%20-%20Lennart%202007.pdf), FOSS.in 2007, Lennart Poettering
- ₃[macOS App Sandboxing](https://developer.apple.com/app-sandboxing/), Apple
₀₁₂₃₄₅₆₇₈₉
