A little overview on the different volumes PA handles internally:

== pa_sink_input ==

'''virtual_volume''' is the volume that is visible to the user. In classic volume mode this is relative to the current sink volume. In flat volume mode it is absolute, i.e. in the same units/range as the sink's volume.

'''volume_factor''' is an internal volume factor that can be used by effect modules to apply additional software volume adjustments to a stream. Primary user for now is module-position-event-sounds.

'''relative_volume''' is the software volume that shall be applied on all PCM data handed to the sink without the '''volume_factor''' applied. For flat volumes this is usually near 0dB for the loudest stream.

'''soft_volume''' is an internal volume calculated as the multiplication of '''relative_volume''' by '''volume_factor'''. It is as such the actual factor applied on the PCM data.

== pa_sink ==

'''virtual_volume''' is the volume that is visible to the user. 

'''base_volume''' is an informational value that stores where a 'good' virtual volume level is for the device. Depending on the backend drivers this might be set to something < 0dB but most often is 0dB. 

'''reference_volume''' is the volume that if pa_sink_input_set_volume() is called with absolute=FALSE or pa_sink_input_new() with data->absolute_volume=FALSE the volumes should be considered relative to. Often this is identical to '''virtual_volume'''. Generally if the virtual volume is changed due to sink input volume changes the reference volume is not updated. It is however updated if the virtual volume is directly modified.

'''soft_volume''' is an internal volume that is applied to the PCM data before it is handed out to the device. For devices lacking hw volume control this is used to apply volumes. Also, on devices that do dB based volumes this is used to extend the volume range.

== Formulas ==

Object ''i'' shall be a pa_sink_input, object ''s'' a pa_sink.

{{{
i->soft_volume := i->relative_volume * i->volume_factor
}}}

In flat volume mode:

{{{
i->relative_volume := i->virtual_volume / s->virtual_volume
}}}

In classic volume mode:
{{{
i->relative_volume := i->virtual_volume
}}}


