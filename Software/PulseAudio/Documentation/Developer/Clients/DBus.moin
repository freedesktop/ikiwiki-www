= PulseAudio's D-Bus interface =

These pages should eventually contain the final D-Bus control interface specification. Currently it's just a draft, comments welcome.

Note: Whenever "user bus" is mentioned in these pages, it means "session bus" until the user bus gets implemented in D-Bus.

== Overview ==

Previously the only D-Bus services !PulseAudio provided were an implementation of the [http://git.0pointer.de/?p=reserve.git;a=blob_plain;f=reserve.txt Device Reservation spec] for sound cards and reservation of the org.pulseaudio.Server name on the session or system bus for server tracking purposes. Those features remain untouched, and this document doesn't have anything to do with them.

The new functionality consists of two parts: a server lookup service and the main control interface. When clients want to use the control interface, they have to first figure out where they should connect to. How to connect to the control interface is specified on the [wiki:DBusInterface/ConnectingToServer ConnectingToServer] page. The main control interface is provided as a "D-Bus server". That is, it's not available on any bus, but instead clients make direct connections to !PulseAudio.


== Open Questions ==

 * Should the server cookie be available? I think that's not a good idea until authentication has been improved. System mode and allowing TCP connections in whatever mode is currently insecure anyway, but when a user decides to disable either system mode or TCP access, the cookie may have already leaked, allowing unwanted connections via the traditional protocol.

 * Does it make sense for clients to save card names? If not, the .Core1.!GetCardByName method is probably unneeded.

 * Same for .Core1.Card.!GetProfileByName.

 * Same for .Core1.Device.!GetPortByName.

 * Should sample file and directory names be byte arrays instead of strings? I believe utf-8 file names are common, but not universal. On the other hand, nobody requires us to accept every possible file as a sample.

 * Some properties that are available in the C API are exposed both explicitly and in the proplist. Should this interface do the same, or only have the proplist? (I vote for proplist only.) This decision affects device descriptions, stream names and client names. If separate properties are the way to go, then the Set* methods are unneeded, as the properties can be made read/write.

 * Currently stream names can be changed, but only by the owning client. At least in the first phase a D-Bus client can't be a stream owner. Currently all stream owning clients have to use the C API anyway, so they can set the name with it just fine. But does it make sense, nevertheless, to allow any client change any stream's name via D-Bus? If not, what about in the future, if things go as planned and the normal way of streaming is to use RTSP/RTP, are the RTSP clients still able to set the name, or is RTSP so limited that it's not possible (my knowledge about RTSP is obviously next to none)?


== Control API ==

The detailed descriptions are spread to separate pages, roughly one per object type. This page provides only a minimal reference and links to the details.


=== Notation ===

 * Arrays are written as [<type>]. For example, [Byte] is an array of bytes. 
 * Dictionaries are written as {<type1> -> <type2>}. For example, {String -> [Byte]} is a dictionary with strings as keys and byte arrays as values.
 * Structs are written as (<type1>, <type2>, ..., <typeN>). For example (Byte, Uint32) is a struct of a byte and an unsigned 32 bit integer.
 * On this page only, property access is denoted with (r) for read and with (rw) for read/write.
 * The rest should be obvious.



=== Proplists ===

Proplists (short for property lists) are dictionaries that are associated with many objects. The keys are utf-8 strings and the values are arbitrary data (usually they are utf-8 strings too, though). Proplists are used to attach many kinds of metadata to the objects: names, descriptions, intended roles and so on. For now the best source of information about available properties is the [http://0pointer.de/lennart/projects/pulseaudio/doxygen/proplist_8h.html proplist.h] file documentation.



=== [wiki:DBusInterface/Core General Server Functionality] ===

 * Object '''/org/pulseaudio1''' implements interfaces '''org.pulseaudio.Core1''', org.freedesktop.DBus.Properties and org.freedesktop.DBus.Introspectable.


==== [wiki:DBusInterface/Core#org.pulseaudio.Core1 org.pulseaudio.Core1] ====

[wiki:DBusInterface/Core#Properties Properties]:

 * [wiki:DBusInterface/Core#InterfaceRevision InterfaceRevision] : Uint32 (r)
 * [wiki:DBusInterface/Core#Name Name] : String (r)
 * [wiki:DBusInterface/Core#Version Version] : String (r)
 * [wiki:DBusInterface/Core#Local Local] : Boolean (r)
 * [wiki:DBusInterface/Core#Username Username] : String (r)
 * [wiki:DBusInterface/Core#Hostname Hostname] : String (r)
 * [wiki:DBusInterface/Core#DefaultChannels DefaultChannels] : [Byte] (rw)
 * [wiki:DBusInterface/Core#DefaultSampleFormat DefaultSampleFormat] : Byte (rw)
 * [wiki:DBusInterface/Core#DefaultSampleRate DefaultSampleRate] : Uint32 (rw)
 * [wiki:DBusInterface/Core#Sinks Sinks] : [!ObjectPath] (r)
 * [wiki:DBusInterface/Core#FallbackSink FallbackSink] : !ObjectPath (rw) # Doesn't exist when there are no sinks.
 * [wiki:DBusInterface/Core#Sources Sources] : [!ObjectPath] (r)
 * [wiki:DBusInterface/Core#FallbackSource FallbackSource] : !ObjectPath (rw) # Doesn't exist when there are no sources.
 * [wiki:DBusInterface/Core#PlaybackStreams PlaybackStreams] : [!ObjectPath] (r)
 * [wiki:DBusInterface/Core#RecordStreams RecordStreams]: [!ObjectPath] (r)
 * [wiki:DBusInterface/Core#Samples Samples] : [!ObjectPath] (r)
 * [wiki:DBusInterface/Core#Modules Modules] : [!ObjectPath] (r)
 * [wiki:DBusInterface/Core#Clients Clients] : [!ObjectPath] (r)
 * [wiki:DBusInterface/Core#Extensions Extensions] : [String] (r)


[wiki:DBusInterface/Core#Methods Methods]:

 * [wiki:DBusInterface/Core#GetCardByName GetCardByName](in Name : String ; out Card : !ObjectPath)
 * [wiki:DBusInterface/Core#GetSinkByName GetSinkByName](in Name : String ; out Sink : !ObjectPath)
 * [wiki:DBusInterface/Core#GetSourceByName GetSourceByName](in Name : String ; out Source : !ObjectPath
 * [wiki:DBusInterface/Core#GetSampleByName GetSampleByName](in Name : String ; out Sample : !ObjectPath)
 * [wiki:DBusInterface/Core#UploadSample UploadSample](in Name : String, !SampleFormat : Byte, !SampleRate : Uint32, Channels : [Byte], !DefaultVolume : [Uint32], Proplist : {String -> [Byte]}, Data : [Byte] ; out Sample : !ObjectPath)
 * [wiki:DBusInterface/Core#LoadSampleFromFile LoadSampleFromFile](in Name : String, Filepath : String ; out Sample : !ObjectPath)
 * [wiki:DBusInterface/Core#AddLazySample AddLazySample](in Name : String, Filepath : String ; out Sample : !ObjectPath)
 * [wiki:DBusInterface/Core#AddLazySamplesFromDirectory AddLazySamplesFromDirectory](in Dirpath : String)
 * [wiki:DBusInterface/Core#LoadModule LoadModule](in Name : String, Argument : String ; out Module : !ObjectPath)
 * [wiki:DBusInterface/Core#Exit Exit]()


[wiki:DBusInterface/Core#Signals Signals]:

 * [wiki:DBusInterface/Core#NewCard NewCard](Card : !ObjectPath)
 * [wiki:DBusInterface/Core#CardRemoved CardRemoved](Card : !ObjectPath)
 * [wiki:DBusInterface/Core#NewSink NewSink](Sink : !ObjectPath)
 * [wiki:DBusInterface/Core#SinkRemoved SinkRemoved](Sink : !ObjectPath)
 * [wiki:DBusInterface/Core#FallbackSinkUpdated FallbackSinkUpdated](Sink : !ObjectPath)
 * [wiki:DBusInterface/Core#NewSource NewSource](Source : !ObjectPath)
 * [wiki:DBusInterface/Core#SourceRemoved SourceRemoved](Source : !ObjectPath)
 * [wiki:DBusInterface/Core#FallbackSourceUpdated FallbackSourceUpdated](Source : !ObjectPath)
 * [wiki:DBusInterface/Core#NewPlaybackStream NewPlaybackStream](!PlaybackStream : !ObjectPath)
 * [wiki:DBusInterface/Core#PlaybackStreamRemoved PlaybackStreamRemoved](!PlaybackStream : !ObjectPath)
 * [wiki:DBusInterface/Core#NewRecordStream NewRecordStream](!RecordStream : !ObjectPath)
 * [wiki:DBusInterface/Core#RecordStreamRemoved RecordStreamRemoved](!RecordStream : !ObjectPath)
 * [wiki:DBusInterface/Core#NewSample NewSample](Sample : !ObjectPath)
 * [wiki:DBusInterface/Core#SampleRemoved SampleRemoved](Sample : !ObjectPath)
 * [wiki:DBusInterface/Core#NewModule NewModule](Module : !ObjectPath)
 * [wiki:DBusInterface/Core#ModuleRemoved ModuleRemoved](Module : !ObjectPath)
 * [wiki:DBusInterface/Core#NewClient NewClient](Client : !ObjectPath)
 * [wiki:DBusInterface/Core#ClientRemoved ClientRemoved](Client : !ObjectPath)



=== Memory Statistics ===

 * Object '''/org/pulseaudio1/memstats''' implements interfaces '''org.pulseaudio.Core1.Memstats''', org.freedesktop.DBus.Properties and org.freedesktop.DBus.Introspectable.


==== org.pulseaudio.Core1.Memstats ====

Properties:

 * !CurrentMemblocks : Uint32 (r)
 * !CurrentMemblocksSize : Uint32 (r)
 * !AllMemblocks : Uint32 (r)
 * !AllMemblocksSize : Uint32 (r)
 * !SampleCacheSize : Uint32 (r)



=== Cards ===

 * Objects '''/org/pulseaudio1/cardX''' implement interfaces '''org.pulseaudio.Core1.Card''', org.freedesktop.DBus.Properties and org.freedesktop.DBus.Introspectable.


==== org.pulseaudio.Core1.Card ====

Properties:

 * Index : Uint32 (r)
 * Name : String (r)
 * Driver : String (r)
 * !OwnerModule : !ObjectPath (r) # Does not exist for all cards.
 * Profiles : [!ObjectPath] (r)
 * !ActiveProfile : !ObjectPath (rw) # Does not exist if there are no profiles.
 * Proplist : {String -> [Byte]} (r)


Methods:

 * !GetProfileByName(in Name : String ; out Profile : !ObjectPath)


Signals:

 * !ActiveProfileUpdated(Profile : !ObjectPath)
 * !ProplistUpdated(Proplist : {String -> [Byte]})



=== Card Profiles ===

 * Objects '''/org/pulseaudio1/cardX/profileY''' implement interfaces '''org.pulseaudio.Core1.!CardProfile''', org.freedesktop.DBus.Properties and org.freedesktop.DBus.Introspectable.


==== org.pulseaudio.Core1.!CardProfile ====

Properties:

 * Index : Uint32 (r)
 * Name : String (r)
 * Description : String (r)
 * Sinks : Uint32 (r)
 * Sources : Uint32 (r)
 * Priority : Uint32 (r)



=== Devices (Sinks and Sources) ===

 * Objects '''/org/pulseaudio1/sinkX''' and '''/org/pulseaudio1/sourceX''' implement interfaces '''org.pulseaudio.Core1.Device''', org.freedesktop.DBus.Properties and org.freedesktop.DBus.Introspectable.

 * Objects '''/org/pulseaudio1/sinkX''' implement interface '''org.pulseaudio.Core1.Sink'''

 * Objects '''/org/pulseaudio1/sourceX''' implement interface '''org.pulseaudio.Core1.Source'''


==== org.pulseaudio.Core1.Device ====

Properties:

 * Index : Uint32 (r)
 * Name : String (r)
 * Driver : String (r)
 * !OwnerModule : !ObjectPath (r) # Does not exist for all devices.
 * Card : !ObjectPath (r) # Does not exist for all devices.
 * !SampleFormat : Byte (r)
 * !SampleRate : Uint32 (r)
 * Channels : [Byte] (r)
 * Volume : [Uint32] (rw)
 * !DecibelVolume : Boolean (r)
 * !BaseVolume : Uint32 (r)
 * !VolumeSteps : Uint32 (r)
 * Muted : Boolean (rw)
 * !HardwareVolume : Boolean (r)
 * !HardwareMute : Boolean (r)
 * !ConfiguredLatency : Uint64 # usec
 * !DynamicLatency : Boolean (r)
 * Latency : Uint64 (r) # usec, does not exist for all devices.
 * !HardwareDevice : Boolean (r)
 * !NetworkDevice : Boolean (r)
 * State : Byte (r)
 * Ports : [!ObjectPath] (r)
 * !ActivePort : !ObjectPath (rw) # Does not exist if there are no ports.
 * Proplist : {String -> [Byte]} (r)


Methods:

 * !SetDescription(in Description : String)
 * Suspend(in Suspend : Boolean)
 * !GetPortByName(in Name : String ; out Port : !ObjectPath)


Signals:

 * !VolumeUpdated(Volume : [Uint32])
 * !MuteUpdated(Muted : Boolean)
 * !StateUpdated(State : Byte)
 * !ActivePortUpdated(Port : !ObjectPath)
 * !ProplistUpdated(Proplist : {String -> [Byte]})



==== org.pulseaudio.Core1.Sink ====

Properties:

 * !FlatVolume : Boolean (r)
 * !MonitorSource : !ObjectPath (r)



==== org.pulseaudio.Core1.Source ====

Properties:

 * !MonitorOfSink : !ObjectPath (r) # Does not exist if this is not a monitor source.



=== Device Ports ===

 * Objects '''/org/pulseaudio1/sinkX/portY''' and '''/org/pulseaudio1/sourceX/portY''' implement interfaces '''org.pulseaudio.Core1.!DevicePort''', org.freedesktop.DBus.Properties and org.freedesktop.DBus.Introspectable.


==== org.pulseaudio.Core1.!DevicePort ====

Properties:

 * Index : Uint32 (r)
 * Name : String (r)
 * Description : String (r)
 * Priority : Uint32 (r)



=== Streams ===

 * Objects '''/org/pulseaudio1/playback_streamX''' and '''/org/pulseaudio1/record_streamX''' implement interfaces '''org.pulseaudio.Core1.Stream''', org.freedesktop.DBus.Properties and org.freedesktop.DBus.Introspectable.

 * Objects '''/org/pulseaudio1/playback_streamX''' implement interface '''org.pulseaudio.Core1.!PlaybackStream'''


==== org.pulseaudio.Core1.Stream ====

Properties:

 * Index : Uint32 (r)
 * Driver : String (r)
 * !OwnerModule : !ObjectPath (r) # Does not exist for all streams.
 * Client : !ObjectPath (r) # Does not exist for all streams.
 * Device : !ObjectPath (r)
 * !SampleFormat : Byte (r)
 * !SampleRate : Uint32 (r)
 * Channels : [Byte] (r)
 * !BufferLatency : Uint64 (r) # usec
 * !DeviceLatency : Uint64 (r) # usec
 * !ResampleMethod : String (r)
 * Proplist : {String -> [Byte]} (r)


Methods:

 * !SetName(in Description : String)
 * Move(in Device : !ObjectPath)
 * Kill()


Signals:

 * !DeviceUpdated(Device : !ObjectPath)
 * !SampleRateUpdated(!SampleRate : Uint32)
 * !ProplistUpdated(Proplist : {String -> [Byte]})



==== org.pulseaudio.Core1.!PlaybackStream ====

Properties:

 * Volume : [Uint32] (rw)
 * Muted : Boolean (rw)


Signals:

 * !VolumeUpdated(Volume : [Uint32])
 * !MuteUpdated(Muted : Boolean)



=== Samples ===

 * Objects '''/org/pulseaudio1/sampleX''' implement interfaces '''org.pulseaudio.Core1.Sample''', org.freedesktop.DBus.Properties and org.freedesktop.DBus.Introspectable.


==== org.pulseaudio.Core1.Sample ====

Properties:

 * Index : Uint32 (r)
 * Name : String (r)
 * !SampleFormat : Byte (r)
 * !SampleRate : Uint32 (r)
 * Channels : [Byte] (r)
 * !DefaultVolume : [Uint32] (r)
 * Duration : Uint64 (r) # usec
 * Bytes : Uint32 (r)
 * Lazy : Boolean (r)
 * Filename : String (r) # Exists only for lazy samples.
 * Proplist : {String -> [Byte]} (r)


Methods:

 * Play(in Sink : !ObjectPath, Volume : [Uint32], Proplist : {String -> [Byte]})
 * Remove()


Signals:

 * !ProplistUpdated(Proplist : {String -> [Byte]})



=== Modules ===

 * Objects '''/org/pulseaudio1/moduleX''' implement interfaces '''org.pulseaudio.Core1.Module''', org.freedesktop.DBus.Properties and org.freedesktop.DBus.Introspectable.


==== org.pulseaudio.Core1.Module ====

Properties:

 * Index : Uint32 (r)
 * Name : String (r)
 * Argument : String (r)
 * !UsageCounter : Uint32 (r) # Does not exist for all modules.
 * Proplist : {String -> [Byte]} (r)


Methods:

 * Unload()


Signals:

 * !ProplistUpdated(Proplist : {String -> [Byte]})



=== Clients ===

 * Objects '''/org/pulseaudio1/clientX''' implement interfaces '''org.pulseaudio.Core1.Client''', org.freedesktop.DBus.Properties and org.freedesktop.DBus.Introspectable.


==== org.pulseaudio.Core1.Client ====

Properties:

 * Index : Uint32 (r)
 * Driver : String (r)
 * !OwnerModule : !ObjectPath (r) # Does not exist for all clients.
 * Proplist : {String -> [Byte]} (r)


Methods:

 * Kill()


Signals:

 * !ProplistUpdated(Proplist : {String -> [Byte]})



=== "Self": Special Per-Client Interface ===

 * Object '''/org/pulseaudio1/self''' implements interfaces '''org.pulseaudio.Core1.Self''', org.freedesktop.DBus.Properties and org.freedesktop.DBus.Introspectable.


==== org.pulseaudio.Core1.Self ====

Properties:

 * Client : !ObjectPath (r)


Methods:

 * !UpdateProperties(in Proplist : {String -> [Byte]}, !UpdateMode : Byte)
 * !RemoveProperties(in Keys : [String])


Signals:

 * !ClientEvent(Name : String, Proplist : {String -> [Byte]})



=== Stream Restore Extension ===

 * Object '''/org/pulseaudio1/stream_restore''' implements interfaces '''org.pulseaudio.ext.!StreamRestore1''', org.freedesktop.DBus.Properties and org.freedesktop.DBus.Introspectable.

 * Objects '''/org/pulseaudio1/stream_restore/entryX''' implement interfaces '''org.pulseaudio.ext.!StreamRestore1.!RestoreEntry''', org.freedesktop.DBus.Properties and org.freedesktop.DBus.Introspectable.


==== org.pulseaudio.ext.!StreamRestore1 ====

Properties:

 * !InterfaceRevision : Uint32 (r)
 * Entries : [!ObjectPath] (r)


Methods:

 * !PutEntries(in Entries : [(String, [(Byte, Uint32)], Boolean)], !UpdateMode : Byte)
 * !RemoveEntries(in Entries : [!ObjectPath])


Signals:

 * !NewEntry(Entry : !ObjectPath)
 * !EntryRemoved(Entry : !ObjectPath)



==== org.pulseaudio.ext.!StreamRestore1.!RestoreEntry ====

Properties:

 * Index : Uint32 (r)
 * Name : String (r)
 * Channels : [Byte] (r)
 * Volume : [Uint32] (r)
 * Muted : Boolean (r)



=== [wiki:DBusInterface/Enumerations Enumerations] ===

 * [wiki:DBusInterface/Enumerations#Sampleformats Sample formats]
 * [wiki:DBusInterface/Enumerations#Channelpositions Channel positions]
 * Device states
 * Update modes


=== [wiki:DBusInterface/Errors Errors] ===

 * [wiki:DBusInterface/Errors#org.pulseaudio.Core1.NotFoundError org.pulseaudio.Core1.NotFoundError]
 * [wiki:DBusInterface/Errors#org.pulseaudio.Core1.NoSuchPropertyError org.pulseaudio.Core1.NoSuchPropertyError]
