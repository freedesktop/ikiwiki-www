This page should eventually contain the final D-Bus control interface specification. Currently it's just a draft, comments welcome.

Note: Whenever "user bus" is mentioned in this document, it means "session bus" until the user bus gets implemented in D-Bus.

Pulseaudio doesn't expose its main D-Bus interface in any bus. Instead, pulseaudio will act as a server that D-Bus clients connect directly to. To get the address of the server, clients send a query to the user bus. More about that is in the Connecting to a Server section. In order to provide the address lookup service, the daemon startup procedure has to be modified.


== Daemon Startup ==

The daemon can be started just as it is started now, and additionally by using the D-Bus service activation feature. Activating org.pulseaudio.!PulseAudio on the user bus runs `pulseaudio -D`.

If pulseaudio is compiled with D-Bus support, the startup logic is modified:

 * The daemon configuration has a new option: local-server-type. Its value can be "user", "system" or "none". The default value is "user". "none" is used, when only remote servers are to be used. local-server-type conflicts with the old option system-instance. If local-server-type is left undefined, and system-instance is not, the system-instance value is honored. Otherwise local-server-type overrides system-instance.

 * If the server type is either "system" or "none", running pulseaudio as a normal user only starts the server lookup service on the user bus, reserving org.pulseaudio.!PulseAudio.

 * When running as root and the type is "system", a system daemon is started, which reserves org.pulseaudio.Server on the system bus. The system daemon also reserves org.pulseaudio.!PulseAudio on root's user bus and provides the server lookup service. Otherwise running as root isn't different from running as a normal user (apart from possibly getting additional warnings about running as root).

 * If org.pulseaudio.!PulseAudio is already reserved, the new instance refuses to start.

 * When a user daemon is started, pulseaudio reserves org.pulseaudio.Server on the user bus.

Switching smoothly between local-server-type options isn't supported. Patches welcome! When changing the option, the user has to kill all currently running pulseaudio instances in order to avoid surprises.


== Connecting to a Server ==

When a client wants to connect to a server, it reads the $PULSE_DBUS_SERVER environment variable, which contains a space-separated list of server addresses. The client should try them in order until connecting to one of the servers succeed, or until the list ends.

If $PULSE_DBUS_SERVER is empty or connecting to none of the servers succeeds, the client activates org.pulseaudio.!PulseAudio on the user bus and then calls GetDBusServers on /org/pulseaudio/config. It returns a list similar to the $PULSE_DBUS_SERVER environment variable. The client again tries the addresses in the list, and if connecting to none of them succeeds, the client gives up.

GetDBusServers works by reading the current default-dbus-server option in client.conf. If the option is unset, the local-server-type daemon option is used to determine the address. If it's "none", GetDBusServers returns an empty string.

Pulseaudio relies on D-Bus for authenticating and authorizing users, local and remote. TODO: Information for users about how to set up secure remote D-Bus connections is needed. (XXX: I have yet to confirm that there really isn't anything that pulseaudio needs to worry about. --tanuk)
