This page should eventually contain the final D-Bus control interface specification.

== Proposal ==

Note: Whenever "user bus" is mentioned in this document, it means "session bus" until the user bus gets implemented in D-Bus.

Most of the functionality won't be available in any bus. Instead, pulseaudio will act as a server that D-Bus clients connect directly to.

When a client wants to connect to a server, it reads the $PULSE_DBUS_SERVER environment variable, which contains a space-separated list of server addresses. The client should try them in order until connecting to one of the servers succeed, or until the list ends.

If $PULSE_DBUS_SERVER is empty or connecting to none of the servers succeeds, the client activates org.pulseaudio.!PulseAudio on the user bus and then calls org.pulseaudio.!PulseAudio.GetDBusServers. It returns a list similar to the $PULSE_DBUS_SERVER environment variable. The client again tries the addresses in the list, and if connecting to none of them succeeds, the client gives up.

If pulseaudio configuration says that a local per-user server should be used, then activating org.pulseaudio.!PulseAudio starts the user daemon. Otherwise the activation starts just a dummy daemon that provides org.pulseaudio.!PulseAudio.GetDBusServers for a while. GetDBusServers gets its information from client.conf, or from the fact that a system-wide daemon is running.

System-wide daemon doesn't autospawn nor autoexit, so it should be started from an init script or something like that.

If the D-Bus module is configured to allow remote connections, those are available only when the server is running, which means that connecting to a remote autoexiting user daemon requires luck (as I believe is the current situation too). The common case is probably to use system-wide mode when receiving remote connections.

The system-wide daemon and a daemon that accepts remote connections use D-Bus authentication and connection encryption capabilities. Currently authorization based on user groups is possible, so that can be used for the system-wide daemon. Otherwise these features are still lacking in D-Bus, therefore allowing remote D-Bus connections is quite insecure.
