[[!inline pages="Software/PulseAudio/TOC" quick="yes" raw="yes"]]

# PulseAudio 9.0 release notes (draft)

## Changes at a glance

 * Various new features in the WebRTC echo canceller
 * Support for sample rates up to 384 kHz
 * WebRTC minimum version bumped to 0.2

## Notes for end users

### Various new features in the WebRTC echo canceller

The WebRTC echo canceller now supports [[beamforming|https://en.wikipedia.org/wiki/Beamforming#Beamforming_for_speech_audio]]. To enable the feature, pass "beamforming=true" in aec_args when loading module-echo-cancel. The filter also needs to know the microphone array geometry and the target direction, configured with the "mic_geometry" and "target_direction" options. For more details about how to configure beamforming, refer to the [[Modules|Software/PulseAudio/Documentation/User/Modules/#index45h3]] wiki page.

There's a new "extended filter" mode in the WebRTC echo canceller. The extended filter is more complex and less sensitive to incorrect delay reporting from the hardware than the regular filter. The extended filter mode is disabled by default, because it seemed produce worse results during double-talk (based on some very quick testing). Pass "extended_filter=true" in aec_args when loading module-echo-cancel to enable this feature.

It's now possible to disable the voice activation detection feature. To do that, pass "voice_detection=false" in aec_args when loading module-echo-cancel.

It's now possible to configure the initial volume when using AGC (automatic gain control). To do that, pass "agc_start_volume=VOL" in aec_args when loading module-echo-cancel (replace VOL with a number between 0 and 255). Note that too low initial volume may prevent the AGC algorithm from ever raising the volume high enough (there seems to be some regression in the WebRTC code in this regard).

### Support for sample rates up to 384 kHz

PulseAudio has traditionally limited the maximum sample rate to 192 kHz, but it seems that there is some use for rates as high as 384 kHz, so the hard limit has been increased. While such rates may seem nonsensical, there are reasons for supporting them:

 * Some online stores sell music with such sample rates.
 * ALSA uses such sample rates for playing back some compressed formats in passthrough mode. In that case the actual audio doesn't have that high sample rate. The high rate is just an ALSA quirk originating from the choice of pretending that the compressed data is PCM audio with only two channels, while the compressed data actually carries more channels. Note that these compressed formats don't work yet with PulseAudio, the increase in the maximum sample rate is just a precondition for adding the support later.
 * There are indications that some hardware supports such rates. PulseAudio should now be able to take advantage of that hardware feature, but it hasn't been tested.

## Notes for application developers

### Support for sample rates up to 384 kHz

If you have always wanted to create streams in your application with sample rates higher than 192 kHz, now it is possible, up to 384 kHz.

## Notes for packagers

### WebRTC minimum version bumped to 0.2

When enabling the WebRTC features, the webrtc-audio-processing package version has to be at least 0.2. Note that webrtc-audio-processing 0.2 is not compatible with applications that use version 0.1 (for example, older PulseAudio versions), so PulseAudio and webrtc-audio-processing have to be upgraded in lockstep.

## git shortlog

<pre>
To be added later.
</pre>
