[[http://www.freedesktop.org/wiki/Software/systemd/|Back to systemd]]

= Journal JSON Format =

 ''Note that this document describes the JSON serialization format of the journal only, as used for interfacing with web technologies. For binary transfer of journal data across the network there's the [[http://www.freedesktop.org/wiki/Software/systemd/export|Journal Export Format]] instead. The binary format on disk is documented as [[http://www.freedesktop.org/wiki/Software/systemd/journal-files|Journal File Format]].''

For the most case the JSON serialization is the obvious mapping of the entry field names as strings to the entry field values as strings in a JSON object. However, there are a few special cases to handle:

 * A field that contains non-printable or non-UTF8 is serialized as a number array instead. This is necessary to handle binary data in a safe way without losing data. Each byte of the binary field will be mapped to its numeric value in the range 0..255.
 * The JSON serializer can optionally skip huge data fields from the JSON object. If that is enabled and a data field is too large, the field name is still included in the JSON object but assigned 'null'.
 * Journal entry fields can have multiple values assigned within the same entry. This is not allowed in JSON. The serializer will hence create a single JSON field only, that will be assigned an array of strings (or number arrays, see above).
