= localed =

systemd 30 and newer include systemd-localed. This is a tiny daemon that can be used to control the system locale from user programs.

The daemon is accessible via D-Bus:
{{{
$ gdbus introspect --system --dest org.freedesktop.locale1 --object-path /org/freedesktop/locale1
node /org/freedesktop/locale1 {
  interface org.freedesktop.locale1 {
    methods:
      SetLocale(in  as locale,
                in  b user_interaction);
    signals:
    properties:
      readonly as Locale = ['LANG=en_US.UTF-8'];
  };
  interface org.freedesktop.DBus.Properties {
  };
  interface org.freedesktop.DBus.Introspectable {
  };
  interface org.freedesktop.DBus.Peer {
  };
};
}}}

Whenever the system locale is changed via the daemon PropertyChanged signals are sent out to which clients can subscribe. Changing the system locale using this interface is authenticated via PolicyKit. 

The user_interaction boolean parameters can be used to control wether PolicyKit should interactively ask the user for authentication credentials if it needs to. 

The system locale consists of an array of environment-variable-assignment-like strings. The following strings are know: LANG=, LC_CTYPE=, LC_NUMERIC=,
LC_TIME=, LC_COLLATE=, LC_MONETARY=, LC_MESSAGES=, LC_PAPER=, LC_NAME=, LC_ADDRESS=, LC_TELEPHONE=, LC_MEASUREMENT=, LC_IDENTIFICATION=.

If you set a new system locale all old system locale settings will be dropped, and the new settings will be saved to disk. It will also be passed to the system manager, and subsequently started daemons will inherit the new system locale from it. Note that already running daemons will not learn about the new system locale.

The sources for localed are available in git for review: http://cgit.freedesktop.org/systemd/tree/src/localed.c
