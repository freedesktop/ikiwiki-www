[[http://www.freedesktop.org/wiki/Software/systemd/|Back to systemd]]

= Interface Portability And Stability Chart =

systemd provides a number of APIs to applications. Below you'll find a table detailing which APIs are considered stable and how portable they are. 

This list is intended to be useful for distribution and OS developers who are interested to maintain a certain level of compatibility with the new interfaces systemd introduced, without relying on systemd itself.

In general it is our intention to cooperate with interfaces, not with code with other distributions and OSes. That means, that the interfaces where this applies are best reimplemented in a compatible fashion on those other operating systems. To make this easy we provide detailed interface documentation where necessary. That said, it's all Open Source, hence you have the option to a) fork our code and maintain portable versions of the parts you are interested in independently for your OS, or b) build systemd for your distro, but leave out all components but the ones you are interested in and run them without the core of systemd involved. We will try not to make this any more difficult than necessary, but we do not officially support using systemd code this way and will not accept patches for making this easier.

Many of these interfaces are already being used by applications and 3rd party code. If you are interested in compatibility with these applications, please consider supporting these interfaces in your distribution, where possible.

== General Portability of systemd and its Components ==

'''Portability to OSes:''' systemd is not portable to non-Linux systems. It makes use of a large number of Linux-specific interfaces, including many that are used by its very core. We do not consider it feasable to port systemd to other Unixes (let alone non-Unix operating systems) and will not accept patches for systemd implementing any such portability (but hey, it's git, so it's as easy as it can get to maintain your own fork...). APIs that are supposed to be used as drop-in .c files are excepted from this: it is important to us that these compile nicely on non-Linux and even non-Unix platforms, even if they might just become NOPs.

'''Portability to Architectures:''' It is important to us that systemd is portable to little endian as well as big endian systems. We will make sure to provide portability with all important architectures and hardware Linux runs on and are happy to accept patches for this.

'''Portability to Distributions:''' It is important to us that systemd is portable to all important Linux distributions. However, we'd like to minimize differences between the distributions and hence are very conservative in accepting patches for certain distribution-specific compatibility. You need a strong case to get us to accept distribution-specific patches and it needs to be clear that sooner or later we intend to drop all distribution-specific patches, if the distributions are sufficiently unified. Also, please understand that we are very conservative in adding patches for very exotic niche distributions.

'''Compatibility with Specific Versions of Other packages:''' We generally avoid adding compatibility kludges to systemd that work around bugs in certain versions of other software systemd interfaces with. We strongly encourage to fix bugs where they are, and if that's not systemd we rather not try to fix it there. (There are very few exceptions to this rule possible, and you need an exceptionally strong case for it).

== General Portability of systemd's APIs ==

systemd's APIs are available everywhere where systemd is available. Some of the APIs we have defined are supposed to be generic enough to be implementable independently of systemd, thus allowing compatibility with systems systemd itself is not compatible with, i.e. other OSes, and distributions that are unwilling to fully adopt systemd.

A number of systemd's APIs expose Linux or systemd-specific features that cannot sensibly be implemented elsewhere. Please consult the table below for informations which ones these are.

Note that not all of these interfaces are our invention (but most), we just adopted them in systemd to make them more prominently implemented. For example, we adopted many Debian facilities in systemd to push it into the other distributions as well.

----

And now, here's the list of (hopefully) all APIs that we have introduced with systemd:

||'''API''' ||'''Type'''||'''Covered by [[http://www.freedesktop.org/wiki/Software/systemd/InterfaceStabilityPromise|Interface Stability Promise]]'''||'''Fully documented'''||'''Known External Consumers'''||'''Reimplementable Independently'''||'''Known Other Implementations'''||'''systemd Implementation portable to other OSes or non-systemd distributions||
||[[http://www.freedesktop.org/wiki/Software/systemd/hostnamed|hostnamed]]||D-Bus||yes||yes||GNOME||yes||[[https://launchpad.net/ubuntu/+source/ubuntu-system-service|Ubuntu]], [[http://www.gentoo.org/proj/en/desktop/gnome/openrc-settingsd.xml|Gentoo]]||partially||
||[[http://www.freedesktop.org/wiki/Software/systemd/localed|localed]]||D-Bus||yes||yes||GNOME||yes||[[https://launchpad.net/ubuntu/+source/ubuntu-system-service|Ubuntu]], [[http://www.gentoo.org/proj/en/desktop/gnome/openrc-settingsd.xml|Gentoo]]||partially||
||[[http://www.freedesktop.org/wiki/Software/systemd/timedated|timedated]]||D-Bus||yes||yes||GNOME||yes||[[http://www.gentoo.org/proj/en/desktop/gnome/openrc-settingsd.xml|Gentoo]]||partially||
||[[http://www.freedesktop.org/wiki/Software/systemd/InitrdInterface|initrd interface]]||Environment, flag files||yes||yes||dracut, ArchLinux||yes||ArchLinux||no||
||[[http://www.freedesktop.org/wiki/Software/systemd/ContainerInterface|Container interface]]||Environment, Mounts||yes||yes||libvirt/LXC||yes||-||no||
||Service bus API||D-Bus||no||no||system-config-services||no||-||no||
||[[http://www.freedesktop.org/wiki/Software/systemd/logind|logind]]||D-Bus||yes||yes||GNOME||no||-||no||
||[[http://0pointer.de/public/systemd-man/sd-login.html|sd-login.h API]]||C Library||yes||yes||GNOME, PolicyKit, ...||no||-||no||
||[[http://0pointer.de/public/systemd-man/sd-daemon.html|sd-daemon.h API]]||C Library or Drop-in||yes||yes||numerous||yes||-||yes||
||sd-id128.h API||C Library||no||no||-||yes||-||no||
||sd-journal.h API||C Library||no||no||-||no||-||no||
||[[http://0pointer.de/public/systemd-man/sd-readahead.html|sd-readahead.h API]]||C Drop-in||yes||yes||-||yes||-||yes||
||[[http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html|$XDG_RUNTIME_DIR]]||Environment||yes||yes||glib, GNOME||yes||-||no||
||[[http://0pointer.de/public/systemd-man/sd_listen_fds.html|$LISTEN_FDS/$LISTEN_PID FD Passing]]||Environment||yes||yes||numerous (via sd-daemon.h)||yes||-||no||
||[[http://0pointer.de/public/systemd-man/sd_notify.html|$NOTIFY_SOCKET Daemon Notifications]]||Environment||yes||yes||a few, including udev||yes||-||no||
||[[http://www.freedesktop.org/wiki/Software/systemd/RootStorageDaemons|argv[0][0]='@' Logic]]||/proc marking||yes||yes||mdadm||yes||-||no||
||[[http://0pointer.de/public/systemd-man/systemd.unit.html|Unit file format]]||File format||yes||yes||numerous||no||-||no||
||Journal file format||File format||no||no||-||no||-||no||
||[[http://www.freedesktop.org/wiki/Software/systemd/PaxControlGroups|Cooperation in cgroup tree]]||Treaty||yes||yes||libvirt||yes||libvirt||no||
||[[http://www.freedesktop.org/wiki/Software/systemd/PasswordAgents|Password Agents]]||Socket+Files||yes||yes||-||yes||-||no||
||[[http://www.freedesktop.org/wiki/Software/systemd/multiseat|udev multi-seat properties]]||udev Property||yes||yes||X11, gdm||no||-||no||
||udev session switch ACL properties||udev Property||no||no||-||no||-||no||
||[[http://0pointer.de/public/systemd-man/systemctl.html|CLI of systemctl,...]]||CLI||yes||yes||numerous||no||-||no||
||container= Container Detection||Environment||yes||no||-||yes||LXC, libvirt||no||
||[[http://0pointer.de/public/systemd-man/tmpfiles.d.html|/etc/tmpfiles.d]]||File format||yes||yes||numerous||yes||ArchLinux||partially||
||[[http://0pointer.de/public/systemd-man/machine-id.html|/etc/machine-id]]||File format||yes||yes||D-Bus||yes||-||no||
||[[http://0pointer.de/public/systemd-man/binfmt.d.html|/etc/binfmt.d]]||File format||yes||yes||numerous||yes||-||partially||
||[[http://0pointer.de/public/systemd-man/hostname.html|/etc/hostname]]||File format||yes||yes||numerous (it's a Debian thing)||yes||Debian, ArchLinux||no||
||[[http://0pointer.de/public/systemd-man/locale.conf.html|/etc/locale.conf]]||File format||yes||yes||-||yes||ArchLinux||partially||
||[[http://0pointer.de/public/systemd-man/machine-info.html|/etc/machine-info]]||File format||yes||yes||-||yes||-||partially||
||[[http://0pointer.de/public/systemd-man/modules-load.d.html|/etc/modules-load.d]]||File format||yes||yes||numerous||yes||-||partially||
||[[http://0pointer.de/public/systemd-man/os-release.html|/etc/os-release]]||File format||yes||yes||some||yes||Fedora, OpenSUSE, ArchLinux, Angstrom, Frugalware, others...||no||
||[[http://0pointer.de/public/systemd-man/sysctl.d.html|/etc/sysctl.d]]||File format||yes||yes||some (it's a Debian thing)||yes||procps/Debian, ArchLinux||partially||
||[[http://0pointer.de/public/systemd-man/timezone.html|/etc/timezone]]||File format||yes||yes||numerous (it's a Debian thing)||yes||Debian||partially||
||[[http://0pointer.de/public/systemd-man/vconsole.conf.html|/etc/vconsole.conf]]||File format||yes||yes||-||yes||ArchLinux||partially||
||/run||File hierarchy change||yes||yes||numerous||yes||OpenSUSE, Debian, ArchLinux||no||
||[[http://www.freedesktop.org/wiki/Software/systemd/Generators|Generators]]||Subprocess||yes||yes||-||no||-||no||
||[[http://freedesktop.org/wiki/Software/systemd/SystemUpdates|System Updates]]||System Mode||yes||yes||-||no||-||no||
||[[http://freedesktop.org/wiki/Software/systemd/Preset|Presets]]||File format||yes||yes||-||no||-||no||
||Udev rules||File format||yes||yes||numerous||no||no||partially||

=== Explanations ===

Items for which "systemd implementation portable to other OSes" is "partially" means that it is possible to run the respective tools that are included in the systemd tarball outside of systemd. Note however that this is not officially supported, so you are more or less on your own if you do this. If you are opting for this solution simply build systemd as you normally would but drop all files except those which you are interested in.

Of course, it is our intentation to eventually document all interfaces we defined. If we haven't documented them for now, this is usually because we want the flexibility to still change things, or don't want 3rd party applications to make use of these interfaces already. That said, our sources are quite readable and open source, so feel free to spelunk around in the sources if you want to know more.

If you decide to reimplement one of the APIs for which "Reimplementable independently" is "no", then we won't stop you, but you are on your own.

This is not an attempt to comprehensively list all users of these APIs. We are just listing the most obvious/prominent ones which come to our mind.

Of course, one last thing I can't make myself not ask you before we finish here, and before you start reimplementing these APIs in your distribution: are you sure it's time well spent if you work on reimplementing all this code instead of just spending it on adopting systemd on your distro as well?
