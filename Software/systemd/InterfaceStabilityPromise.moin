NOTE: THIS TEXT IS STILL A DRAFT, WE'LL FINALIZE IT AS SOON AS IT IS CLEAR WHICH SYSTEMD VERSION FEDORA 14 WILL SHIP. UNTIL THEN THIS PROMISE IS VOID.

systemd provides various interfaces developers and programs might rely on. Starting with version FILLVERSIONINHERE (the first version released with Fedora 14) we promise to keep a number of them stable and compatible for the future. The stable interfaces are:

 * The unit configuration file format. Unit files written now will stay compatible with future versions of systemd. Extensions to the file format will happen in a way that existing files remain compatible.

 * The command line interface of systemctl and systemd. We will make sure that scripts invoking these commands will continue to work with future versions of systemd. Note however that the output generated by these commands is generally not included in the promise, unless it is documented in the man page. Example: the output of "systemctl status" is not stable, but the one of "systemctl show" is, because the former is intended to be human readable and the latter computer readable, and this is documented in the man page.
 
 * The protocol spoken on the socket referred to by $NOTIFY_SOCKET, as documented in sd_notify(3).

The following interfaces will not necessarily be kept stable for now, but we will eventually make a stability promise for these interfaces too. In the meantime we will however try to keep breakage of these interfaces at a minimum:

 * The D-Bus interfaces (!) [ An additional restriction applies here: functionality we consider legacy might not be available based on compile-time options, such as SysV support, libwrap support and similar. Apps should no assume properties and methods related to this functionality are unconditionally available in the D-Bus interfaces. ]

 * The set of states of the various state machines used in systemd, e.g. the unit states inactive, active, deactivating, and so on.

The following interfaces are considered private to systemd, and are not and will not be covered by any stability promise:

 * Undocumented switches to systemd, systemctl and otherwise
 
 * The internal protocols used on the various sockets such as the abstract namespace sockets /org/freedesktop/systemd1/logger, /org/freedesktop/systemd1/shutdown, /org/freedesktop/systemd1/private

What does this mean for you? When developing with systemd, don't use any of the latter interfaces, or we will tell your mom, and she won't love you anymore. You are welcome to  use the other interfaces listed here, but if you use any of the second kind (i.e. those where we don't yet make a stability promise), then make sure to subscribe to our mailing list, where we will announce API changes, and be prepared to update your program eventually.

TODO:

standard unit names

time frame, guarantee vs. promise

add reference in man pages
