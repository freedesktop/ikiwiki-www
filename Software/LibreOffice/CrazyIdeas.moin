With an announcement like !LibreOffice, there is often a floodgate of radical ideas
on directions the project might take.  Obviously !LibreOffice isn't going to immediately
rewrite the whole codebase, but it ''is'' a chance to discuss new ideas - hence this page. Please do note that this is a non-endorsed list made up by everyone, so don't go away here thinking this is the directions that LO *will* actually take (or even wants to take).

== Explore whether MS Office support in LibreOffice can be made into libraries ==

'''Idea:''' It is acknowledged as being difficult, but explore what it might take
to rework !LibreOffice's MS Office support into libraries that could be shared by
other open source office projects.  Can it be done at all, or is the required logic
too deeply specific to each open source project's own internal logic and framework?

== Cross platform build with CMake ==

'''Idea:''' Explore using CMake to have one unified build logic for !LibreOffice on Windows,
Mac, *nix platforms, etc. Probably should build on the GNU make work being done [[http://wiki.services.openoffice.org/wiki/Build_Environment_Effort/Dependencies]]

== Replace all interface code with an interface using the Qt widgets ==

'''Idea''': Rework !LibreOffice to use the Qt widgets for its GUI, instead
of the current approaches to get native appearance.  Would almost certainly
involve massive reworking of all the interface code - around 1 million lines.
It would also make !LibreOffice depend on another huge piece of code owned by
a single corporation with (C) assignment: unclear that this is a positive
move though the GUI would look better.

== Remove java components ==
'''Idea''': Some think java is a slow memory hog, others think it is a legal swamp that invites lawsuits. Neither might be true, but some developers have nevertheless xpressed their desire to remove java usage in LO over time. OUr build master says, the first step is to make compilation work with --without-java (it currently fails), and then go to replace components by non-java components. E.g. the xslt processing is being done with java, apparently and libxslt (which is already included in LO) could be used to do the job.
