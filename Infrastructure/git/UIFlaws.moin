This page attempts to document the most egregious git UI offenses, in the hope that they'll get fixed someday.  It would be pleasant if git had a bugzilla.  In git's defence, 1.5 appears to be making great strides towards usability.  

 * `git-revert` will refuse to back out multi-parent commits, ie, merges.  The obvious behaviour is to do basically what `git-show [commit] | patch -p1 -R` would do, ie, roll back the tree state to the branch you came from.
 * `git-rebase foo` is a noop, when foo is the name of local branch.  You would expect it to fetch the branch named foo from upstream, and rebase your foo branch on top of it.
 * `git-fetch` requires that the branch be named on both sides of the :.  It should treat `foo` as an alias for `foo:foo`.
 * `git-rebase` claims you should `git-rebase --continue` after you fix up the merges; it really means you should `git-update-index` followed by `git-rebase --continue`.
 * The command to merge branch B onto branch A is not `git-merge A B`.  Instead it's `git-checkout A && git-pull . B`.
 * There is no way to tell `git-fetch` (or therefore `git-pull`) to grab all newly available branches.  You have to ask for them  by two names (as above), and then there's no way to get those names automatically into your remotes list (also as above).
 * `git pull`'s default behaviour on a branch is unhelpful: even when there is an explicit Pull: branch1:branch1 line, a `git pull` with branch1 checked out will still pull in master.
 * Fundamentally, the entire approach of making the UI painful to deal with and forcing the user to deal with all the warts (instead of just making the hairy low-level commands available), because people will write nice wrappers around it, is the same reason people laughed at tla, and still do.
 * The index should be second-class, i.e. no -a flags to avoid the index.
 * branch:branch-origin (or something) should be the default pull.
 * branch:branch should be the default push for all branches, but only push the current branch unless a flag is added.
 * An update command should be created that:
  * fetches the current branch's upstream to its -origin locally (or all branches, perhaps);
  * merges the current branch origin to the branch locally;
  * commits if it was a fast-forward, and leaves uncommitted diffs otherwise.
